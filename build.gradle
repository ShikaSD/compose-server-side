buildscript {
    ext {
        Properties properties = new Properties()
        def propertiesFile = project.rootProject.file('local.properties')
        if (propertiesFile.exists()) {
            properties.load(propertiesFile.newDataInputStream())
        }
        aosp_location = properties.getProperty('aosp.location')
        android_build_tool_version = '4.0.1'
        kotlin_version = "1.4-M3"
        //FIXME if use 1.4.31 kotlinx.serialization must over 1.0
//        kotlin_version = "1.4.31"
//        - Android Compose
        android_compose_appcompat_version = '1.3.0-beta01'
        android_compose_activity_version = '1.3.0-alpha02'
//        - Jetpack Compose - shared UI
        jb_compose_version = '0.3.2'

        //collections-immutable
        coroutines_core_version = '1.3.7-1.4-M3'
        collections_immutable_version = '0.3'
        ktor_version = '1.3.2-1.4-M3'
//        1.5.0-M2
        kotlin_serialization_version = '1.4-M3'
//        kotlin_serialization_version = '1.4.31'
        //Ref : https://blog.csdn.net/vitaviva/article/details/104779479
        //Ref : https://blog.csdn.net/weixin_44761758/article/details/89536909?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control&dist_request_id=1329187.9314.16178509973458491&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control
          serialization_runtime= '0.20.0-1.4-M3'
//        serialization_runtime= '1.0-M1-1.4.0-rc-218'
//        1.0.0-alpha13
        compose_version = '1.0.0-beta01'
    }

    repositories {
        google()
        mavenCentral()
        jcenter()
        gradlePluginPortal()
        maven {
            url = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
        }
        //JB_Kotlin_Multiplatform
        maven {
            url "https://plugins.gradle.org/m2/"
        }

        maven {
            url = "https://dl.bintray.com/kotlin/kotlin-eap"
        }
        maven {
            url = "https://dl.bintray.com/kotlin/kotlin-dev"
        }
        //JB_Compose
        maven {
            url = "https://maven.pkg.jetbrains.space/public/p/compose/dev"
        }
//        // kotlin-DSL
//        maven("https://maven.pkg.jetbrains.space/public/p/compose/dev")
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${android_build_tool_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //JB_Kotlin_Multiplatform
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.0-M2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_serialization_version"

        //Test
        classpath "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"

        //JB_Compose
        classpath "org.jetbrains.compose:compose-gradle-plugin:$jb_compose_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {

    id 'org.jetbrains.kotlin.jvm' version '1.4-M3'
//    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
}

group 'me.shika'
version '1.0-SNAPSHOT'

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
        gradlePluginPortal()
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
        //JB_Kotlin_Multiplatform
        maven {
            url "https://plugins.gradle.org/m2/"
        }

        maven {
            url = "https://dl.bintray.com/kotlin/kotlin-eap"
        }
        maven {
            url = "https://dl.bintray.com/kotlin/kotlin-dev"
        }
        //JB_Compose
        maven {
            url = "https://maven.pkg.jetbrains.space/public/p/compose/dev"
        }
    }

//    tasks.withType(org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile) {
//        kotlinOptions {
//            freeCompilerArgs += ["-Xskip-prerelease-check"]
//        }
//    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            freeCompilerArgs += ["-Xskip-prerelease-check"]

//            freeCompilerArgs = [
//                    "-Xjsr305=strict",
//                    "-progressive",
////                "-Xopt-in=kotlin.RequiresOptIn"
//            ]
            jvmTarget = "1.8"
            useIR = true
            allWarningsAsErrors = false
        }
    }
}
